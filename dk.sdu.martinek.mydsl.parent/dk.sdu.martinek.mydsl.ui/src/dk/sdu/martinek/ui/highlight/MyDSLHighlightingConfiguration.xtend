/*
 * generated by Xtext 2.16.0
 */
package dk.sdu.martinek.ui.highlight

import org.eclipse.swt.SWT
import org.eclipse.swt.graphics.RGB
import org.eclipse.xtext.ui.editor.syntaxcoloring.DefaultHighlightingConfiguration
import org.eclipse.xtext.ui.editor.syntaxcoloring.IHighlightingConfigurationAcceptor
import org.eclipse.xtext.ui.editor.utils.TextStyle

class MyDSLHighlightingConfiguration extends DefaultHighlightingConfiguration {
 
  public static final String ENTITY_ID = "entity";
  public static final String WIDGET_ID = "widget";
  public static final String WIDGET_TYPE_ID = "widget_type";
  public static final String PROPERTY_ID = "property";
  public static final String LABEL_ID = "label";
 
 
  override configure(IHighlightingConfigurationAcceptor acceptor) {
    acceptor.acceptDefaultHighlighting(ENTITY_ID, "Entity", coloredStyle(200,0,200));
    acceptor.acceptDefaultHighlighting(WIDGET_ID, "Widget", coloredStyle(0,200,0));
    acceptor.acceptDefaultHighlighting(WIDGET_TYPE_ID, "WidgetType", coloredBoldStyle(0,200,0));
    acceptor.acceptDefaultHighlighting(PROPERTY_ID, "Property", coloredStyle(200,0,0));
    acceptor.acceptDefaultHighlighting(LABEL_ID, "Label", coloredBoldStyle(200,200,0));
	super.configure(acceptor)
  }
  
	def TextStyle coloredStyle(int r, int g, int b) {
	    val textStyle = new TextStyle();
	    textStyle.setColor(new RGB(r,g,b));
	    return textStyle;
	}
	def TextStyle coloredBoldStyle(int r, int g, int b) {
	    val textStyle = coloredStyle(r,g,b);
	    textStyle.style = SWT.BOLD;
	    return textStyle;
	}
}